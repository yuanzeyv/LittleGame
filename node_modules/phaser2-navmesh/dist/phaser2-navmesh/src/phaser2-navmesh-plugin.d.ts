import Phaser2NavMesh from "./phaser2-navmesh";
/**
 * This class can create navigation meshes for use in Phaser 2 / Phaser CE. (For Phaser 3, see
 * {@link PhaserNavMeshPlugin}.) The navmeshes can be constructed from convex polygons embedded in a
 * Tiled map. The class that conforms to Phaser 2's plugin structure.
 */
export default class Phaser2NavMeshPlugin extends Phaser.Plugin {
    private phaserNavMeshes;
    constructor(game: Phaser.Game, pluginManager: Phaser.PluginManager);
    /** Destroy all navmeshes created and the plugin itself. */
    destroy(): void;
    /**
     * Remove all the meshes from the navmesh.
     */
    removeAllMeshes(): void;
    /**
     * Remove the navmesh stored under the given key from the plugin. This does not destroy the
     * navmesh.
     *
     * @param key
     */
    removeMesh(key: string): void;
    /**
     * Load a navmesh from Tiled. Currently assumes that the polygons are squares! Does not support
     * tilemap layer scaling, rotation or position.
     *
     * @param key Key to use when storing this navmesh within the plugin.
     * @param objectLayer The ObjectLayer from a tilemap that contains
     * the polygons that make up the navmesh.
     * @param The amount (in pixels) that the navmesh has been shrunk
     * around obstacles (a.k.a the amount obstacles have been expanded)
     */
    buildMeshFromTiled(key: string, objectLayer: any[], meshShrinkAmount?: number): Phaser2NavMesh;
}
//# sourceMappingURL=phaser2-navmesh-plugin.d.ts.map