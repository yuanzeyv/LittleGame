import { Texture2D } from "cc";
import { ITMFont } from "../types/ITMFont";
import { Char, CharSet } from "./Char";
import { IFontData } from "../types/IFontData";
import { TextureChannel } from "./TextureChannel";
import { GlyphInfo } from "../types/types";
import { TMFontInfo } from "./FontParser";
export declare class FontData implements IFontData {
    private _tmFont;
    private _texture;
    private _letters;
    private _staticLetters;
    private _dynamicChannels;
    private _actualSize;
    private _buffer;
    private _fontRect;
    private _safePadding;
    get tmFont(): ITMFont;
    get texture(): Texture2D;
    get chars(): CharSet;
    get spaceSize(): number;
    get safePadding(): number;
    constructor(tmFont: ITMFont, texture?: Texture2D, channels?: TextureChannel[], tmfInfo?: TMFontInfo);
    initial(): void;
    private createDynamicChannels;
    removeDynamicChar(code: string): void;
    getRoundLine(): Char;
    getRectLine(): Char;
    getNoneChar(): Char;
    getCharInfo(code: string, charRender?: (code: string, tmFont: ITMFont) => GlyphInfo, thisRender?: any): Char;
    private clearChannel;
    private writeToTexture;
}
